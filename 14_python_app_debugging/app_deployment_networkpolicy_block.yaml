apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
          name: web
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: curl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: curl
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: curl
    spec:
      containers:
      - command: ["/bin/bash", "-c", "curl --connect-timeout 10 nginx"]
        image: registry.workshop.kumina.net/common/debian-python:3.9
        imagePullPolicy: IfNotPresent
        name: curl
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      imagePullSecrets:
        - name: workshop-registry
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 1
#---
#apiVersion: batch/v1
#kind: Job
#metadata:
#  name: curl
#spec:
#  backoffLimit: 100
#  activeDeadlineSeconds: 10
#  completions: 1
#  parallelism: 1
#  template:
#    spec:
#      containers:
#        - command: ["/bin/bash", "-c", "curl nginx"]
#          image: registry.workshop.kumina.net/common/debian-python:3.9
#          imagePullPolicy: IfNotPresent
#          name: curl
#          resources:
#            requests:
#              cpu: 100m
#              memory: 256Mi
#          terminationMessagePath: /dev/termination-log
#          terminationMessagePolicy: File
#      imagePullSecrets:
#        - name: workshop-registry
#      dnsPolicy: ClusterFirst
#      restartPolicy: OnFailure
#      terminationGracePeriodSeconds: 1
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-label-workshop-debug
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          workshop: debug
  podSelector:
    matchLabels:
      app: nginx
  policyTypes:
  - Ingress